version: "3.9"

services:
  be:
    container_name: "backend"
    build:
      context: backend
      dockerfile: ./Dockerfile
    command: ./backend
    restart: always
    networks:
      - new
#    env_file:
#      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - DB_PASSWORD=postgres
    ports:
      - "5555:5555"
    depends_on:
      - db
    volumes:
      - .:/backend
  db:
    image: postgres:15-alpine
    container_name: "db"
    networks:
      new:
        aliases:
          - database
#    env_file:
#      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5438:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d qtr_portal -U qtr_portal" ]
      interval: 5s
      retries: 5
    restart: always
  migrate:
    image: migrate/migrate
    networks:
      - new
    volumes:
      - .:/backend/migrations
    command: [ "-path", "/backend/migrations", "-database",  "postgres://postgres:postgres@db:5432/postgres?sslmode=disable", "up" ]
    links:
      - db
    depends_on:
      - db
  frontend:
    container_name: "FE"
    build:
      context: frontend
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    networks:
      - new
#    expose:
#      - "80"
  nginx:
    image: nginx:latest
    container_name: production_nginx
    #    volumes:
    #      - ./nginx.conf:/etc/nginx/nginx.conf
    #      - "certificates:/etc/letsencrypt/"
    ports:
      - 80:80
      - 443:443
    networks:
      - new
    environment:
      - ENV=development
      - APPLICATION_URL=http://rzhakalol

networks:
  new:

volumes:
  postgres_data: